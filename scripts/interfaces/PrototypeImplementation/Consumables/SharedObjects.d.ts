import { ISession } from "../../Interfaces/ISession.js";
export declare class SharedObjects {
    GetCameraVideoDevice(): string;
    GetScreenVideoDevice(): string;
    GetCameraAudioDevice(): string;
    switchToScreenVideoDevice(newDeviceId: string): void;
    switchToCameraAudioDevice(newDeviceId: string): void;
    switchToCameraVideoDevice(newDeviceId: string): void;
    private static _Instance;
    private cameraLocalMedia;
    private screenLocalMedia;
    private _isLocalMediaStarted;
    private _localCameraAudio;
    private _localCameraVideo;
    private _localScreenVideo;
    private _localScreenAudio;
    private get _needAudio();
    private StopCamera;
    private StopScreen;
    private constructor();
    static Instance(): SharedObjects;
    private _Sessions;
    private _SessionLayouts;
    onSessionUpdate(): Promise<void>;
    createScreenStream(session: ISession, screenVideo?: boolean, screenAudio?: boolean, container?: HTMLElement): Promise<fm.liveswitch.LocalMedia>;
    createCameraStream(session: ISession, container?: HTMLElement, cameraVideo?: boolean, cameraAudio?: boolean): Promise<fm.liveswitch.LocalMedia>;
    onSessionLeave(session: ISession): Promise<void>;
    private updateLocaLMedias;
    private cameraResolved?;
    private screenResolved?;
    private updatePromiseResolve;
    getLayoutManagerBySessionId(sessionId: string): fm.liveswitch.DomLayoutManager;
    getLayoutManager(seesion: ISession): fm.liveswitch.DomLayoutManager;
    private removeLocalLayouts;
    private stopScreenLocalMedia;
    private stopCameraLocalMedia;
    private startLocalScreenMedia;
    private startLocalCameraMedia;
}
